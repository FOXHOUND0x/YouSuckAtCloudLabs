{
	"Statement": [
		{
			"Action": [
				"datazone:CreateDomain",
				"datazone:ListDomains",
				"datazone:GetDomain",
				"datazone:UpdateDomain",
				"datazone:ListProjects",
				"datazone:ListTagsForResource",
				"datazone:UntagResource",
				"datazone:TagResource",
				"datazone:SearchUserProfiles",
				"datazone:SearchGroupProfiles",
				"datazone:UpdateGroupProfile",
				"datazone:UpdateUserProfile",
				"datazone:CreateUserProfile",
				"datazone:CreateGroupProfile",
				"datazone:PutEnvironmentBlueprintConfiguration",
				"datazone:ListEnvironmentBlueprints",
				"datazone:ListEnvironmentBlueprintConfigurations",
				"datazone:DeleteDomain"
			],
			"Effect": "Allow",
			"Resource": "*"
		},
		{
			"Action": "iam:PassRole",
			"Condition": {
				"StringEquals": {
					"iam:passedToService": "datazone.amazonaws.com"
				}
			},
			"Effect": "Allow",
			"Resource": "*"
		},
		{
			"Action": [
				"kms:DescribeKey",
				"kms:Decrypt",
				"kms:CreateGrant",
				"kms:Encrypt",
				"kms:GenerateDataKey",
				"kms:ReEncrypt*",
				"kms:RetireGrant"
			],
			"Effect": "Allow",
			"Resource": "*"
		},
		{
			"Action": [
				"kms:ListKeys",
				"kms:ListAliases"
			],
			"Effect": "Allow",
			"Resource": "*"
		},
		{
			"Action": [
				"iam:ListRoles",
				"iam:GetPolicy",
				"iam:ListAttachedRolePolicies",
				"iam:GetPolicyVersion"
			],
			"Effect": "Allow",
			"Resource": "*"
		},
		{
			"Action": [
				"sso:DescribeRegisteredRegions",
				"sso:ListProfiles",
				"sso:AssociateProfile",
				"sso:DisassociateProfile",
				"sso:GetProfile",
				"sso:ListInstances",
				"sso:CreateApplication",
				"sso:DeleteApplication",
				"sso:PutApplicationAssignmentConfiguration",
				"sso:PutApplicationGrant",
				"sso:PutApplicationAuthenticationMethod"
			],
			"Effect": "Allow",
			"Resource": "*"
		},
		{
			"Action": [
				"bedrock:ListFoundationModels",
				"bedrock:ListProvisionedModelThroughputs",
				"bedrock:ListModelCustomizationJobs",
				"bedrock:ListCustomModels",
				"bedrock:ListTagsForResource",
				"bedrock:ListGuardrails",
				"bedrock:ListAgents",
				"bedrock:ListKnowledgeBases",
				"bedrock:GetFoundationModelAvailability"
			],
			"Effect": "Allow",
			"Resource": "*"
		},
		{
			"Action": [
				"s3:ListBucket",
				"s3:ListBucketVersions",
				"s3:GetObject",
				"s3:PutObject",
				"s3:DeleteObject",
				"s3:GetObjectVersion",
				"s3:DeleteObjectVersion"
			],
			"Condition": {
				"StringEquals": {
					"s3:ResourceAccount": "361160291213"
				}
			},
			"Effect": "Allow",
			"Resource": "arn:aws:s3:::br-studio-361160291213-*",
			"Sid": "AccessS3Buckets"
		},
		{
			"Action": "aoss:APIAccessAll",
			"Condition": {
				"StringEquals": {
					"aws:ResourceAccount": "361160291213"
				}
			},
			"Effect": "Allow",
			"Resource": "*",
			"Sid": "AccessOssCollections"
		},
		{
			"Action": [
				"bedrock:InvokeModel",
				"bedrock:InvokeModelWithResponseStream",
				"bedrock:RetrieveAndGenerate"
			],
			"Effect": "Allow",
			"Resource": "*",
			"Sid": "InvokeBedrockModels"
		},
		{
			"Action": [
				"bedrock:InvokeAgent",
				"bedrock:Retrieve",
				"bedrock:StartIngestionJob",
				"bedrock:GetIngestionJob",
				"bedrock:ListIngestionJobs",
				"bedrock:ApplyGuardrail",
				"bedrock:ListPrompts",
				"bedrock:GetPrompt",
				"bedrock:CreatePrompt",
				"bedrock:DeletePrompt",
				"bedrock:CreatePromptVersion",
				"bedrock:InvokeFlow",
				"bedrock:ListTagsForResource",
				"bedrock:TagResource",
				"bedrock:UntagResource"
			],
			"Condition": {
				"Null": {
					"aws:ResourceTag/AmazonDataZoneProject": "false"
				},
				"StringEquals": {
					"aws:ResourceAccount": "361160291213",
					"aws:ResourceTag/AmazonBedrockManaged": "true"
				}
			},
			"Effect": "Allow",
			"Resource": "*",
			"Sid": "AccessBedrockResources"
		},
		{
			"Action": "bedrock:InvokeFlow",
			"Condition": {
				"Null": {
					"aws:ResourceTag/AmazonDataZoneProject": "false"
				},
				"StringEquals": {
					"aws:ResourceAccount": "361160291213"
				}
			},
			"Effect": "Allow",
			"Resource": "arn:aws:bedrock:*:*:flow/*/alias/*",
			"Sid": "InvokeBedrockFlows"
		},
		{
			"Action": [
				"logs:CreateLogGroup",
				"logs:CreateLogStream",
				"logs:PutLogEvents"
			],
			"Condition": {
				"Null": {
					"aws:ResourceTag/AmazonDataZoneProject": "false"
				},
				"StringEquals": {
					"aws:ResourceAccount": "361160291213",
					"aws:ResourceTag/AmazonBedrockManaged": "true"
				}
			},
			"Effect": "Allow",
			"Resource": "*",
			"Sid": "WriteLogs"
		},
		{
			"Action": "lambda:InvokeFunction",
			"Condition": {
				"Null": {
					"aws:ResourceTag/AmazonDataZoneProject": "false"
				},
				"StringEquals": {
					"aws:ResourceAccount": "361160291213",
					"aws:ResourceTag/AmazonBedrockManaged": "true"
				}
			},
			"Effect": "Allow",
			"Resource": "arn:aws:lambda:*:*:function:br-studio-*",
			"Sid": "InvokeLambdaFunctions"
		},
		{
			"Action": [
				"secretsmanager:DescribeSecret",
				"secretsmanager:GetSecretValue",
				"secretsmanager:PutSecretValue"
			],
			"Condition": {
				"Null": {
					"aws:ResourceTag/AmazonDataZoneProject": "false"
				},
				"StringEquals": {
					"aws:ResourceAccount": "361160291213",
					"aws:ResourceTag/AmazonBedrockManaged": "true"
				}
			},
			"Effect": "Allow",
			"Resource": "arn:aws:secretsmanager:*:*:secret:br-studio/*",
			"Sid": "AccessSecretsManagerSecrets"
		},
		{
			"Action": [
				"kms:Decrypt",
				"kms:GenerateDataKey"
			],
			"Condition": {
				"StringEquals": {
					"aws:ResourceAccount": "361160291213",
					"aws:ResourceTag/EnableBedrock": "true"
				}
			},
			"Effect": "Allow",
			"Resource": "*",
			"Sid": "UseCustomerManagedKmsKey"
		}
	],
	"Version": "2012-10-17"
}