{
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Action": [
             "apigateway:*",
              "application-autoscaling:*",
              "appsync:CreateApiKey",
              "appsync:CreateDataSource",
              "appsync:CreateGraphqlApi",
              "appsync:CreateResolver",
              "appsync:CreateType",
              "appsync:DeleteApiKey",
              "appsync:DeleteDataSource",
              "appsync:DeleteGraphqlApi",
              "appsync:DeleteResolver",
              "appsync:DeleteType",
              "appsync:GetDataSource",
              "appsync:GetGraphqlApi",
              "appsync:GetIntrospectionSchema",
              "appsync:GetResolver",
              "appsync:GetSchemaCreationStatus",
              "appsync:GetType",
              "appsync:GraphQL",
              "appsync:StartSchemaCreation",
              "appsync:UpdateApiKey",
              "appsync:UpdateDataSource",
              "appsync:UpdateGraphqlApi",
              "appsync:UpdateResolver",
              "appsync:UpdateType",
              "autoscaling:*",
              "cloudformation:CreateChangeSet",
              "cloudformation:CreateStack",
              "cloudformation:DeleteStack",
              "cloudformation:Describe*",
              "cloudformation:ExecuteChangeSet",
              "cloudformation:GetTemplate",
              "cloudformation:ListChangeSets",
              "cloudformation:ListStacks",
              "cloudformation:SetStackPolicy",
              "cloudformation:UpdateStack",
              "cloudformation:ValidateTemplate",
              "cloudfront:CreateCloudFrontOriginAccessIdentity",
              "cloudfront:CreateDistribution",
              "cloudfront:DeleteDistribution",
              "cloudfront:GetDistribution",
              "cloudfront:GetDistributionConfig",
              "cloudfront:ListCloudFrontOriginAccessIdentities",
              "cloudfront:ListDistributions",
              "cloudfront:TagResource",
              "cloudfront:UpdateDistribution",
              "cloudwatch:*",
              "config:*",
              "datapipeline:*",
              "dynamodb:*",
              "ec2:*",
              "ecs:CreateCluster",
              "ecs:CreateService",
              "ecs:DeleteCluster",
              "ecs:DeleteService",
              "ecs:DeregisterTaskDefinition",
              "ecs:Describe*",
              "ecs:List*",
              "ecs:RegisterTaskDefinition",
              "ecs:RunTask",
              "ecs:UpdateService",
              "elasticache:AddTagsToResource",
              "elasticache:AuthorizeCacheSecurityGroupIngress",
              "elasticache:CreateCacheCluster",
              "elasticache:CreateCacheParameterGroup",
              "elasticache:CreateCacheSecurityGroup",
              "elasticache:CreateCacheSubnetGroup",
              "elasticache:CreateReplicationGroup",
              "elasticache:DeleteCacheCluster",
              "elasticache:DeleteCacheParameterGroup",
              "elasticache:DeleteCacheSecurityGroup",
              "elasticache:DeleteCacheSubnetGroup",
              "elasticache:DeleteReplicationGroup",
              "elasticache:DescribeCacheClusters",
              "elasticache:DescribeCacheParameterGroups",
              "elasticache:DescribeCacheParameters",
              "elasticache:DescribeCacheSecurityGroups",
              "elasticache:DescribeCacheSubnetGroups",
              "elasticache:DescribeEngineDefaultParameters",
              "elasticache:DescribeEvents",
              "elasticache:DescribeReplicationGroups",
              "elasticache:ModifyCacheCluster",
              "elasticache:ModifyCacheParameterGroup",
              "elasticache:ModifyCacheSubnetGroup",
              "elasticache:ModifyReplicationGroup",
              "elasticache:RemoveTagsFromResource",
              "elasticbeanstalk:*",
              "elasticfilesystem:*",
              "elasticloadbalancing:*",
              "elasticmapreduce:*",
              "events:DeleteRule",
              "events:DescribeRule",
              "events:ListRules",
              "events:PutRule",
              "events:PutTargets",
              "events:RemoveTargets",
              "iam:AddRoleToInstanceProfile",
              "iam:AttachRolePolicy",
              "iam:CreateInstanceProfile",
              "iam:CreatePolicy",
              "iam:CreatePolicyVersion",
              "iam:CreateRole",
              "iam:CreateServiceLinkedRole",
              "iam:DeleteInstanceProfile",
              "iam:DeletePolicy",
              "iam:DeletePolicyVersion",
              "iam:DeleteRole",
              "iam:DeleteRolePolicy",
              "iam:DetachRolePolicy",
              "iam:GetInstanceProfile",
              "iam:GetPolicy",
              "iam:GetPolicyVersion",
              "iam:GetRole",
              "iam:GetUser",
              "iam:ListAttachedRolePolicies",
              "iam:ListEntitiesForPolicy",
              "iam:ListInstanceProfiles",
              "iam:ListPolicyVersions",
              "iam:ListRolePolicies",
              "iam:ListRoles",
              "iam:PassRole",
              "iam:PutRolePolicy",
              "iam:RemoveRoleFromInstanceProfile",
              "iam:UpdateAssumeRolePolicy",
              "iam:UploadServerCertificate",
              "kinesis:*",
              "kms:CancelKeyDeletion",
              "kms:Create*",
              "kms:Delete*",
              "kms:Describe*",
              "kms:Disable*",
              "kms:Enable*",
              "kms:Get*",
              "kms:List*",
              "kms:Put*",
              "kms:Revoke*",
              "kms:ScheduleKeyDeletion",
              "kms:Tag*",
              "kms:Update*",
              "lambda:*",
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:DeleteLogGroup",
              "logs:DeleteLogStream",
              "logs:DeleteSubscriptionFilter",
              "logs:DescribeLogGroups",
              "logs:DescribeSubscriptionFilters",
              "logs:PutLogEvents",
              "logs:PutSubscriptionFilter",
              "rds:*",
              "redshift:Create*",
              "redshift:Delete*",
              "redshift:Describe*",
              "redshift:Modify*",
              "route53:AssociateVPCWithHostedZone",
              "route53:ChangeResourceRecordSets",
              "route53:ChangeTagsForResource",
              "route53:CreateHostedZone",
              "route53:DeleteHostedZone",
              "route53:Get*",
              "route53:List*",
              "s3:*",
              "ses:*",
              "sns:*",
              "sqs:*"
          ],
        "Resource": [
          "*"
          ],
        "Effect": "Allow",
        "Sid": "VisualEditor0"
        }
  ]   
} 