Vagrant.configure("2") do |config|
  config.vm.provider "docker" do |d|
    d.has_ssh = false
  end

  # MSSQL Service
  config.vm.define "bitwarden-mssql" do |mssql|
    mssql.vm.provider "docker" do |d|
      d.image = "bitwarden/mssql:latest"
      d.name = "bitwarden-mssql"
      d.remains_running = true
      d.volumes = [
        "./mssql/data:/var/opt/mssql/data",
        "./logs/mssql:/var/opt/mssql/log",
        "./mssql/backups:/etc/bitwarden/mssql/backups"
      ]
      d.env = {
        "ACCEPT_EULA" => "Y"
      }
    end
  end

  # Web Service
  config.vm.define "bitwarden-web" do |web|
    web.vm.provider "docker" do |d|
      d.image = "bitwarden/web:latest"
      d.name = "bitwarden-web"
      d.remains_running = true
      d.volumes = ["./web:/etc/bitwarden/web"]
    end
  end

  # Attachments Service
  config.vm.define "bitwarden-attachments" do |attachments|
    attachments.vm.provider "docker" do |d|
      d.image = "bitwarden/attachments:latest"
      d.name = "bitwarden-attachments"
      d.remains_running = true
      d.volumes = ["./core/attachments:/etc/bitwarden/core/attachments"]
    end
  end

  # API Service
  config.vm.define "bitwarden-api" do |api|
    api.vm.provider "docker" do |d|
      d.image = "bitwarden/api:latest"
      d.name = "bitwarden-api"
      d.remains_running = true
      d.volumes = [
        "./core:/etc/bitwarden/core",
        "./ca-certificates:/etc/bitwarden/ca-certificates",
        "./logs/api:/etc/bitwarden/logs"
      ]
    end
  end

  # Identity Service
  config.vm.define "bitwarden-identity" do |identity|
    identity.vm.provider "docker" do |d|
      d.image = "bitwarden/identity:latest"
      d.name = "bitwarden-identity"
      d.remains_running = true
      d.volumes = [
        "./identity:/etc/bitwarden/identity",
        "./core:/etc/bitwarden/core",
        "./ca-certificates:/etc/bitwarden/ca-certificates",
        "./logs/identity:/etc/bitwarden/logs"
      ]
  end

  # SSO Service
  config.vm.define "bitwarden-sso" do |sso|
    sso.vm.provider "docker" do |d|
      d.image = "bitwarden/sso:latest"
      d.name = "bitwarden-sso"
      d.remains_running = true
      d.volumes = [
        "./identity:/etc/bitwarden/identity",
        "./core:/etc/bitwarden/core",
        "./ca-certificates:/etc/bitwarden/ca-certificates",
        "./logs/sso:/etc/bitwarden/logs"
      ]
    end
  end

  # Admin Service
  config.vm.define "bitwarden-admin" do |admin|
    admin.vm.provider "docker" do |d|
      d.image = "bitwarden/admin:latest"
      d.name = "bitwarden-admin"
      d.remains_running = true
      d.volumes = [
        "./core:/etc/bitwarden/core",
        "./ca-certificates:/etc/bitwarden/ca-certificates",
        "./logs/admin:/etc/bitwarden/logs"
      ]
      d.depends_on = ["bitwarden-mssql"]
    end
  end

  # Icons Service
  config.vm.define "bitwarden-icons" do |icons|
    icons.vm.provider "docker" do |d|
      d.image = "bitwarden/icons:latest"
      d.name = "bitwarden-icons"
      d.remains_running = true
      d.volumes = [
        "./ca-certificates:/etc/bitwarden/ca-certificates",
        "./logs/icons:/etc/bitwarden/logs"
      ]
    end
  end

  # Notifications Service
  config.vm.define "bitwarden-notifications" do |notifications|
    notifications.vm.provider "docker" do |d|
      d.image = "bitwarden/notifications:latest"
      d.name = "bitwarden-notifications"
      d.remains_running = true
      d.volumes = [
        "./ca-certificates:/etc/bitwarden/ca-certificates",
        "./logs/notifications:/etc/bitwarden/logs"
      ]
    end
  end

  # Events Service
  config.vm.define "bitwarden-events" do |events|
    events.vm.provider "docker" do |d|
      d.image = "bitwarden/events:latest"
      d.name = "bitwarden-events"
      d.remains_running = true
      d.volumes = [
        "./ca-certificates:/etc/bitwarden/ca-certificates",
        "./logs/events:/etc/bitwarden/logs"
      ]
    end
  end

  # Nginx Service
  config.vm.define "bitwarden-nginx" do |nginx|
    nginx.vm.provider "docker" do |d|
      d.image = "bitwarden/nginx:latest"
      d.name = "bitwarden-nginx"
      d.remains_running = true
      d.restart = "always"
      d.volumes = [
        "./nginx:/etc/bitwarden/nginx",
        "./letsencrypt:/etc/letsencrypt",
        "./ssl:/etc/ssl",
        "./logs/nginx:/var/log/nginx"
      ]
      d.ports = ["80:8080", "443:8443"]
      d.depends_on = ["bitwarden-web", "bitwarden-admin", "bitwarden-api", "bitwarden-identity"]
      d.env_file = ["./env/uid.env"]
      end
    end
    end
end
